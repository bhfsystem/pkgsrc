#!/usr/bin/env bash

function darwin_hack {
  set +u

  if ! pkg ensure devel/ncurses; then
    pushd "${WRKOBJDIR}/devel/ncurses/work"/ncurses-*
    make
    popd
    pkg ensure devel/ncurses
  fi

  pushd "${PKG_HOME}/install/include"
  ln -nfs gettext/libintl.h .
  popd

  if ! pkg ensure devel/gettext-tools; then
    pushd "${WRKOBJDIR}/devel/gettext-tools/work"/gettext-*
    env CWRAPPERS_CONFIG_DIR=$(pwd)/../.cwrapper/config bmake
    popd
    pkg ensure devel/gettext-tools
  fi

  if ! pkg ensure devel/gettext; then
    pushd "${WRKOBJDIR}/devel/gettext/work"/gettext-*
    env CWRAPPERS_CONFIG_DIR=$(pwd)/../.cwrapper/config bmake
    popd
    pkg ensure devel/gettext
  fi

  set -u
}

function main {
  local shome="$(cd -P -- "${BASH_SOURCE%/*}/.." && pwd -P)"
  source "$shome/script/profile"

  if [[ -z "${PKG_HOME:-}" ]]; then
    return 0
  fi

  if [[ ! -d "$shome/vendor/pkgsrc-mirror" ]]; then
    if [[ -f "/data/git/pkgsrc-mirror-${PKGSRC_BRANCH}.tar.gz" ]]; then
      cd "$shome"
      tar xvfz "/data/git/pkgsrc-mirror-${PKGSRC_BRANCH}.tar.gz"
      cd vendor/pkgsrc-mirror
      git fetch origin "${PKGSRC_BRANCH}"
    elif [[ -f /data/git/pkgsrc-mirror.tar.gz ]]; then
      cd "$shome"
      tar xvfz /data/git/pkgsrc-mirror.tar.gz
      cd vendor/pkgsrc-mirror
      git fetch origin "${PKGSRC_BRANCH}"
    else
      git clone --bare --depth 1 -b "${PKGSRC_BRANCH}" git@github.com:jsonn/pkgsrc "$shome/vendor/pkgsrc-mirror"
    fi
  fi

  if [[ -d "$shome/vendor/pkgsrc" ]]; then
    (cd $shome/vendor/pkgsrc; git checkout -b "${PKGSRC_BRANCH}")
  else
    git clone --depth 1 -b "${PKGSRC_BRANCH}" "file://$shome/vendor/pkgsrc-mirror"  "$shome/vendor/pkgsrc"
  fi

  install -d "$PKG_HOME"

  if ! pkg ensure bootstrap; then
    case "$(uname -s)" in
      Darwin)
        darwin_hack
        pkg ensure bootstrap
        ;;
    esac
  fi

  case "$(uname -s)" in
    Darwin)
      darwin_hack
      ;;
  esac

  pkg ensure devel/ncurses
  pkg ensure devel/gettext-tools
  pkg ensure devel/gettext

  pkg ensure pkgtools/pkgin
  pkg ensure pkgtools/pkg_chk

  pkgin update

  pkg ensure security/mozilla-rootcerts
  if [[ -d "$PKG_HOME/install/etc/openssl/certs" ]]; then
    pushd $PKG_HOME/install/etc/openssl/certs
    if [[ ! -f ".done" ]]; then
      mozilla-rootcerts extract
      mozilla-rootcerts rehash
      touch .done
    fi
    popd
  else
    mozilla-rootcerts install
  fi

  pkg ensure misc/getopt
  pkg ensure net/wget
  pkg ensure www/curl
  pkg ensure devel/gmake
  pkg ensure devel/gettext-tools
}

main "$@"
